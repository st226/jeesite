<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.business.dao.product.SwProductDao">
    
	<sql id="swProductColumns">
		a.id AS "id",
		a.product_name AS "productName",
		a.product_type AS "productType",
		a.product_made AS "productMade",
		a.unit_price AS "unitPrice",
		a.product_amount AS "productAmount",
		a.total_price AS "totalPrice",
		a.reason AS "reason",
		a.office_id AS "office.id",
		a.office_name AS "officeName",
		a.user_id AS "user.id",
		a.user_name AS "userName",
		a.product_use AS "productUse",
		a.remark AS "remark",
		a.order_id AS "orderId",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.field1 AS "field1",
		a.state AS "state",
		a.field2 AS "field2",
		a.field3 AS "field3",
		a.field4 AS "field4",
		a.field5 AS "field5",
		a.file AS "file",
		a.type AS "type",
		a.product_date AS "productDate",
		a.sb_type AS "sbType",
		a.sb_type_name AS "sbTypeName",
		a.zr_user_id AS "zrUserId",
		a.zr_user_name AS "zrUserName",
		a.project_type AS "projectType",
		o9.name AS "office.name",
		u11.name AS "user.name"
	</sql>
	
	<sql id="swProductJoins">
		LEFT JOIN sys_office o9 ON o9.id = a.office_id
		LEFT JOIN sys_user u11 ON u11.id = a.user_id
	</sql>
    
	<select id="get" resultType="SwProduct">
		SELECT 
			<include refid="swProductColumns"/>
		FROM sw_product a
		<include refid="swProductJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="SwProduct">
		SELECT 
			<include refid="swProductColumns"/>
		FROM sw_product a
		<include refid="swProductJoins"/>
		<where>
			
			<if test="productName != null and productName != ''">
				AND a.product_name LIKE concat('%',#{productName},'%')
			</if>
			<if test="productType != null and productType != ''">
				AND a.product_type LIKE concat('%',#{productType},'%') 
			</if>
			<if test="projectType != null and projectType != ''">
				AND a.project_type =  #{projectType}
			</if>
			<if test="productMade != null and productMade != ''">
				AND a.product_made  LIKE concat('%',#{productMade},'%') 
			</if>
			<if test="sbType != null and sbType != ''">
				AND a.sb_type = #{sbType}
			</if>
			<if test="type != null and type != ''">
				AND a.type = #{type}
			</if>
			<if test="orderId != null and orderId != ''">
				AND a.order_id = #{orderId}
			</if>
			<if test="office != null and office.id != null and office.id != ''">
				AND a.office_id = #{office.id}
			</if>
		
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY
				  <if test="zrUserId != null and zrUserId != ''"> 
				        a.zr_user_id=${zrUserId} desc , 
				   </if>
				   ${page.orderBy}
			</when>
			<otherwise>
			 ORDER BY 
			      <if test="zrUserId != null and zrUserId != ''"> 
				        a.zr_user_id=${zrUserId} desc , 
				   </if>
                  a.zr_user_id,a.state,a.product_date,a.product_name,a.office_name
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="SwProduct">
		SELECT 
			<include refid="swProductColumns"/>
		FROM sw_product a
		<include refid="swProductJoins"/>
		<where>
			
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO sw_product(
			id,
			product_name,
			product_type,
			product_made,
			unit_price,
			product_amount,
			total_price,
			reason,
			office_id,
			office_name,
			user_id,
			user_name,
			product_use,
			remark,
			order_id,
			create_by,
			create_date,
			field1,
			state,
			field2,
			field3,
			field4,
			field5,
			product_date,
			sb_type,
			sb_type_name,
			zr_user_id,
			zr_user_name,
			project_type,
			file,
			type
		) VALUES (
			#{id},
			#{productName},
			#{productType},
			#{productMade},
			#{unitPrice},
			#{productAmount},
			#{totalPrice},
			#{reason},
			#{office.id},
			#{officeName},
			#{user.id},
			#{userName},
			#{productUse},
			#{remark},
			#{orderId},
			#{createBy.id},
			#{createDate},
			#{field1},
			#{state},
			#{field2},
			#{field3},
			#{field4},
			#{field5},
			#{productDate},
			#{sbType},
			#{sbTypeName},
			#{zrUserId},
			#{zrUserName},
			#{projectType},
			#{file},
			#{type}
		)
	</insert>
	
	<update id="update">
		UPDATE sw_product SET 	
			product_name = #{productName},
			product_type = #{productType},
			product_made = #{productMade},
			unit_price = #{unitPrice},
			product_amount = #{productAmount},
			total_price = #{totalPrice},
			reason = #{reason},
			office_id = #{office.id},
			office_name = #{officeName},
			user_id = #{user.id},
			user_name = #{userName},
			product_use = #{productUse},
			remark = #{remark},
			order_id = #{orderId},
			field1 = #{field1},
			state = #{state},
			field2 = #{field2},
			field3 = #{field3},
			field4 = #{field4},
			field5 = #{field5},
			product_date = #{productDate},
			sb_type = #{sbType},
			sb_type_name = #{sbTypeName},
			zr_user_id = #{zrUserId},
			zr_user_name = #{zrUserName},
			project_type = #{projectType},
			file = #{file},
			type = #{type}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		DELETE FROM sw_product
		WHERE id = #{id}
	</update>
	
</mapper>